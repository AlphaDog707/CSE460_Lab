// Copyright (C) 1991-2008 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II"
// VERSION "Version 8.1 Build 163 10/28/2008 SJ Web Edition"

// DATE "03/23/2021 12:56:20"

// 
// Device: Altera EPF10K30ETC144-1 Package TQFP144
// 

// 
// This Verilog file should be used for Custom Verilog HDL only
// 

`timescale 1 ps/ 1 ps

module problem4_18101707 (
	x,
	sel,
	y);
input 	[0:15] x;
input 	[3:0] sel;
output 	y;

wire gnd = 1'b0;
wire vcc = 1'b1;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
// synopsys translate_off
initial $sdf_annotate("problem4_18101707_v.sdo");
// synopsys translate_on

wire \Mux0~21_combout ;
wire \Mux0~22_combout ;
wire \Mux0~23_combout ;
wire \Mux0~24_combout ;
wire \Mux0~25_combout ;
wire \Mux0~26_combout ;
wire \Mux0~27_combout ;
wire \Mux0~28_combout ;
wire \Mux0~29_combout ;
wire \Mux0~30_combout ;
wire [3:0] \sel~dataout ;
wire [0:15] \x~dataout ;


// atom is at PIN_56
flex10ke_io \x[10]~I (
	.datain(gnd),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(\x~dataout [10]),
	.padio(x[10]));
// synopsys translate_off
defparam \x[10]~I .feedback_mode = "from_pin";
defparam \x[10]~I .operation_mode = "input";
defparam \x[10]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at PIN_48
flex10ke_io \x[5]~I (
	.datain(gnd),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(\x~dataout [5]),
	.padio(x[5]));
// synopsys translate_off
defparam \x[5]~I .feedback_mode = "from_pin";
defparam \x[5]~I .operation_mode = "input";
defparam \x[5]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at PIN_33
flex10ke_io \x[2]~I (
	.datain(gnd),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(\x~dataout [2]),
	.padio(x[2]));
// synopsys translate_off
defparam \x[2]~I .feedback_mode = "from_pin";
defparam \x[2]~I .operation_mode = "input";
defparam \x[2]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at PIN_83
flex10ke_io \x[13]~I (
	.datain(gnd),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(\x~dataout [13]),
	.padio(x[13]));
// synopsys translate_off
defparam \x[13]~I .feedback_mode = "from_pin";
defparam \x[13]~I .operation_mode = "input";
defparam \x[13]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at PIN_126
flex10ke_io \sel[1]~I (
	.datain(gnd),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(\sel~dataout [1]),
	.padio(sel[1]));
// synopsys translate_off
defparam \sel[1]~I .feedback_mode = "from_pin";
defparam \sel[1]~I .operation_mode = "input";
defparam \sel[1]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at PIN_125
flex10ke_io \x[9]~I (
	.datain(gnd),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(\x~dataout [9]),
	.padio(x[9]));
// synopsys translate_off
defparam \x[9]~I .feedback_mode = "from_pin";
defparam \x[9]~I .operation_mode = "input";
defparam \x[9]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at PIN_124
flex10ke_io \sel[0]~I (
	.datain(gnd),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(\sel~dataout [0]),
	.padio(sel[0]));
// synopsys translate_off
defparam \sel[0]~I .feedback_mode = "from_pin";
defparam \sel[0]~I .operation_mode = "input";
defparam \sel[0]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at PIN_55
flex10ke_io \x[8]~I (
	.datain(gnd),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(\x~dataout [8]),
	.padio(x[8]));
// synopsys translate_off
defparam \x[8]~I .feedback_mode = "from_pin";
defparam \x[8]~I .operation_mode = "input";
defparam \x[8]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at LC1_E32
flex10ke_lcell \Mux0~21 (
// Equation(s):
// \Mux0~21_combout  = \sel~dataout [1] & (\sel~dataout [0]) # !\sel~dataout [1] & (\sel~dataout [0] & \x~dataout [9] # !\sel~dataout [0] & (\x~dataout [8]))

	.dataa(\sel~dataout [1]),
	.datab(\x~dataout [9]),
	.datac(\sel~dataout [0]),
	.datad(\x~dataout [8]),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux0~21_combout ),
	.regout(),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \Mux0~21 .clock_enable_mode = "false";
defparam \Mux0~21 .lut_mask = "e5e0";
defparam \Mux0~21 .operation_mode = "normal";
defparam \Mux0~21 .output_mode = "comb_only";
defparam \Mux0~21 .packed_mode = "false";
// synopsys translate_on

// atom is at PIN_128
flex10ke_io \x[11]~I (
	.datain(gnd),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(\x~dataout [11]),
	.padio(x[11]));
// synopsys translate_off
defparam \x[11]~I .feedback_mode = "from_pin";
defparam \x[11]~I .operation_mode = "input";
defparam \x[11]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at LC3_E32
flex10ke_lcell \Mux0~22 (
// Equation(s):
// \Mux0~22_combout  = \sel~dataout [1] & (\Mux0~21_combout  & (\x~dataout [11]) # !\Mux0~21_combout  & \x~dataout [10]) # !\sel~dataout [1] & (\Mux0~21_combout )

	.dataa(\x~dataout [10]),
	.datab(\sel~dataout [1]),
	.datac(\Mux0~21_combout ),
	.datad(\x~dataout [11]),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux0~22_combout ),
	.regout(),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \Mux0~22 .clock_enable_mode = "false";
defparam \Mux0~22 .lut_mask = "f838";
defparam \Mux0~22 .operation_mode = "normal";
defparam \Mux0~22 .output_mode = "comb_only";
defparam \Mux0~22 .packed_mode = "false";
// synopsys translate_on

// atom is at PIN_54
flex10ke_io \sel[3]~I (
	.datain(gnd),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(\sel~dataout [3]),
	.padio(sel[3]));
// synopsys translate_off
defparam \sel[3]~I .feedback_mode = "from_pin";
defparam \sel[3]~I .operation_mode = "input";
defparam \sel[3]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at PIN_28
flex10ke_io \x[6]~I (
	.datain(gnd),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(\x~dataout [6]),
	.padio(x[6]));
// synopsys translate_off
defparam \x[6]~I .feedback_mode = "from_pin";
defparam \x[6]~I .operation_mode = "input";
defparam \x[6]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at PIN_133
flex10ke_io \x[4]~I (
	.datain(gnd),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(\x~dataout [4]),
	.padio(x[4]));
// synopsys translate_off
defparam \x[4]~I .feedback_mode = "from_pin";
defparam \x[4]~I .operation_mode = "input";
defparam \x[4]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at LC4_E32
flex10ke_lcell \Mux0~23 (
// Equation(s):
// \Mux0~23_combout  = \sel~dataout [0] & (\sel~dataout [1]) # !\sel~dataout [0] & (\sel~dataout [1] & \x~dataout [6] # !\sel~dataout [1] & (\x~dataout [4]))

	.dataa(\sel~dataout [0]),
	.datab(\x~dataout [6]),
	.datac(\sel~dataout [1]),
	.datad(\x~dataout [4]),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux0~23_combout ),
	.regout(),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \Mux0~23 .clock_enable_mode = "false";
defparam \Mux0~23 .lut_mask = "e5e0";
defparam \Mux0~23 .operation_mode = "normal";
defparam \Mux0~23 .output_mode = "comb_only";
defparam \Mux0~23 .packed_mode = "false";
// synopsys translate_on

// atom is at PIN_87
flex10ke_io \x[7]~I (
	.datain(gnd),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(\x~dataout [7]),
	.padio(x[7]));
// synopsys translate_off
defparam \x[7]~I .feedback_mode = "from_pin";
defparam \x[7]~I .operation_mode = "input";
defparam \x[7]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at LC5_E32
flex10ke_lcell \Mux0~24 (
// Equation(s):
// \Mux0~24_combout  = \sel~dataout [0] & (\Mux0~23_combout  & (\x~dataout [7]) # !\Mux0~23_combout  & \x~dataout [5]) # !\sel~dataout [0] & (\Mux0~23_combout )

	.dataa(\x~dataout [5]),
	.datab(\sel~dataout [0]),
	.datac(\Mux0~23_combout ),
	.datad(\x~dataout [7]),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux0~24_combout ),
	.regout(),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \Mux0~24 .clock_enable_mode = "false";
defparam \Mux0~24 .lut_mask = "f838";
defparam \Mux0~24 .operation_mode = "normal";
defparam \Mux0~24 .output_mode = "comb_only";
defparam \Mux0~24 .packed_mode = "false";
// synopsys translate_on

// atom is at PIN_26
flex10ke_io \sel[2]~I (
	.datain(gnd),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(\sel~dataout [2]),
	.padio(sel[2]));
// synopsys translate_off
defparam \sel[2]~I .feedback_mode = "from_pin";
defparam \sel[2]~I .operation_mode = "input";
defparam \sel[2]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at PIN_30
flex10ke_io \x[1]~I (
	.datain(gnd),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(\x~dataout [1]),
	.padio(x[1]));
// synopsys translate_off
defparam \x[1]~I .feedback_mode = "from_pin";
defparam \x[1]~I .operation_mode = "input";
defparam \x[1]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at PIN_78
flex10ke_io \x[0]~I (
	.datain(gnd),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(\x~dataout [0]),
	.padio(x[0]));
// synopsys translate_off
defparam \x[0]~I .feedback_mode = "from_pin";
defparam \x[0]~I .operation_mode = "input";
defparam \x[0]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at LC1_F19
flex10ke_lcell \Mux0~25 (
// Equation(s):
// \Mux0~25_combout  = \sel~dataout [1] & (\sel~dataout [0]) # !\sel~dataout [1] & (\sel~dataout [0] & \x~dataout [1] # !\sel~dataout [0] & (\x~dataout [0]))

	.dataa(\sel~dataout [1]),
	.datab(\x~dataout [1]),
	.datac(\sel~dataout [0]),
	.datad(\x~dataout [0]),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux0~25_combout ),
	.regout(),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \Mux0~25 .clock_enable_mode = "false";
defparam \Mux0~25 .lut_mask = "e5e0";
defparam \Mux0~25 .operation_mode = "normal";
defparam \Mux0~25 .output_mode = "comb_only";
defparam \Mux0~25 .packed_mode = "false";
// synopsys translate_on

// atom is at PIN_82
flex10ke_io \x[3]~I (
	.datain(gnd),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(\x~dataout [3]),
	.padio(x[3]));
// synopsys translate_off
defparam \x[3]~I .feedback_mode = "from_pin";
defparam \x[3]~I .operation_mode = "input";
defparam \x[3]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at LC4_F19
flex10ke_lcell \Mux0~26 (
// Equation(s):
// \Mux0~26_combout  = \sel~dataout [1] & (\Mux0~25_combout  & (\x~dataout [3]) # !\Mux0~25_combout  & \x~dataout [2]) # !\sel~dataout [1] & (\Mux0~25_combout )

	.dataa(\x~dataout [2]),
	.datab(\sel~dataout [1]),
	.datac(\Mux0~25_combout ),
	.datad(\x~dataout [3]),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux0~26_combout ),
	.regout(),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \Mux0~26 .clock_enable_mode = "false";
defparam \Mux0~26 .lut_mask = "f838";
defparam \Mux0~26 .operation_mode = "normal";
defparam \Mux0~26 .output_mode = "comb_only";
defparam \Mux0~26 .packed_mode = "false";
// synopsys translate_on

// atom is at LC6_E32
flex10ke_lcell \Mux0~27 (
// Equation(s):
// \Mux0~27_combout  = \sel~dataout [3] & (\sel~dataout [2]) # !\sel~dataout [3] & (\sel~dataout [2] & \Mux0~24_combout  # !\sel~dataout [2] & (\Mux0~26_combout ))

	.dataa(\sel~dataout [3]),
	.datab(\Mux0~24_combout ),
	.datac(\sel~dataout [2]),
	.datad(\Mux0~26_combout ),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux0~27_combout ),
	.regout(),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \Mux0~27 .clock_enable_mode = "false";
defparam \Mux0~27 .lut_mask = "e5e0";
defparam \Mux0~27 .operation_mode = "normal";
defparam \Mux0~27 .output_mode = "comb_only";
defparam \Mux0~27 .packed_mode = "false";
// synopsys translate_on

// atom is at PIN_42
flex10ke_io \x[14]~I (
	.datain(gnd),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(\x~dataout [14]),
	.padio(x[14]));
// synopsys translate_off
defparam \x[14]~I .feedback_mode = "from_pin";
defparam \x[14]~I .operation_mode = "input";
defparam \x[14]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at PIN_29
flex10ke_io \x[12]~I (
	.datain(gnd),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(\x~dataout [12]),
	.padio(x[12]));
// synopsys translate_off
defparam \x[12]~I .feedback_mode = "from_pin";
defparam \x[12]~I .operation_mode = "input";
defparam \x[12]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at LC7_E32
flex10ke_lcell \Mux0~28 (
// Equation(s):
// \Mux0~28_combout  = \sel~dataout [0] & (\sel~dataout [1]) # !\sel~dataout [0] & (\sel~dataout [1] & \x~dataout [14] # !\sel~dataout [1] & (\x~dataout [12]))

	.dataa(\sel~dataout [0]),
	.datab(\x~dataout [14]),
	.datac(\sel~dataout [1]),
	.datad(\x~dataout [12]),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux0~28_combout ),
	.regout(),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \Mux0~28 .clock_enable_mode = "false";
defparam \Mux0~28 .lut_mask = "e5e0";
defparam \Mux0~28 .operation_mode = "normal";
defparam \Mux0~28 .output_mode = "comb_only";
defparam \Mux0~28 .packed_mode = "false";
// synopsys translate_on

// atom is at PIN_86
flex10ke_io \x[15]~I (
	.datain(gnd),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(\x~dataout [15]),
	.padio(x[15]));
// synopsys translate_off
defparam \x[15]~I .feedback_mode = "from_pin";
defparam \x[15]~I .operation_mode = "input";
defparam \x[15]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at LC8_E32
flex10ke_lcell \Mux0~29 (
// Equation(s):
// \Mux0~29_combout  = \sel~dataout [0] & (\Mux0~28_combout  & (\x~dataout [15]) # !\Mux0~28_combout  & \x~dataout [13]) # !\sel~dataout [0] & (\Mux0~28_combout )

	.dataa(\x~dataout [13]),
	.datab(\sel~dataout [0]),
	.datac(\Mux0~28_combout ),
	.datad(\x~dataout [15]),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux0~29_combout ),
	.regout(),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \Mux0~29 .clock_enable_mode = "false";
defparam \Mux0~29 .lut_mask = "f838";
defparam \Mux0~29 .operation_mode = "normal";
defparam \Mux0~29 .output_mode = "comb_only";
defparam \Mux0~29 .packed_mode = "false";
// synopsys translate_on

// atom is at LC2_E32
flex10ke_lcell \Mux0~30 (
// Equation(s):
// \Mux0~30_combout  = \sel~dataout [3] & (\Mux0~27_combout  & (\Mux0~29_combout ) # !\Mux0~27_combout  & \Mux0~22_combout ) # !\sel~dataout [3] & (\Mux0~27_combout )

	.dataa(\Mux0~22_combout ),
	.datab(\sel~dataout [3]),
	.datac(\Mux0~27_combout ),
	.datad(\Mux0~29_combout ),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux0~30_combout ),
	.regout(),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \Mux0~30 .clock_enable_mode = "false";
defparam \Mux0~30 .lut_mask = "f838";
defparam \Mux0~30 .operation_mode = "normal";
defparam \Mux0~30 .output_mode = "comb_only";
defparam \Mux0~30 .packed_mode = "false";
// synopsys translate_on

// atom is at PIN_27
flex10ke_io \y~I (
	.datain(\Mux0~30_combout ),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(),
	.padio(y));
// synopsys translate_off
defparam \y~I .feedback_mode = "none";
defparam \y~I .operation_mode = "output";
defparam \y~I .reg_source_mode = "none";
// synopsys translate_on

endmodule
