// Copyright (C) 1991-2008 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II"
// VERSION "Version 8.1 Build 163 10/28/2008 SJ Web Edition"

// DATE "03/22/2021 15:51:06"

// 
// Device: Altera EPF10K30ETC144-1 Package TQFP144
// 

// 
// This Verilog file should be used for Custom Verilog HDL only
// 

`timescale 1 ps/ 1 ps

module problem2_18101707 (
	in,
	out);
input 	[3:0] in;
output 	[1:0] out;

wire gnd = 1'b0;
wire vcc = 1'b1;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
// synopsys translate_off
initial $sdf_annotate("problem2_18101707_v.sdo");
// synopsys translate_on

wire \in[3]~dataout ;
wire \in[1]~dataout ;
wire \in[0]~dataout ;
wire \out~38_combout ;
wire \out~39_combout ;


// atom is at PIN_126
flex10ke_io \in[3]~I (
	.datain(gnd),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(\in[3]~dataout ),
	.padio(in[3]));
// synopsys translate_off
defparam \in[3]~I .feedback_mode = "from_pin";
defparam \in[3]~I .operation_mode = "input";
defparam \in[3]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at PIN_124
flex10ke_io \in[1]~I (
	.datain(gnd),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(\in[1]~dataout ),
	.padio(in[1]));
// synopsys translate_off
defparam \in[1]~I .feedback_mode = "from_pin";
defparam \in[1]~I .operation_mode = "input";
defparam \in[1]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at PIN_54
flex10ke_io \in[0]~I (
	.datain(gnd),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(\in[0]~dataout ),
	.padio(in[0]));
// synopsys translate_off
defparam \in[0]~I .feedback_mode = "from_pin";
defparam \in[0]~I .operation_mode = "input";
defparam \in[0]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at LC4_D22
flex10ke_lcell \out~38 (
// Equation(s):
// \out~38_combout  = \in[3]~dataout  # \in[1]~dataout  & !\in[0]~dataout 

	.dataa(vcc),
	.datab(\in[3]~dataout ),
	.datac(\in[1]~dataout ),
	.datad(\in[0]~dataout ),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\out~38_combout ),
	.regout(),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \out~38 .clock_enable_mode = "false";
defparam \out~38 .lut_mask = "ccfc";
defparam \out~38 .operation_mode = "normal";
defparam \out~38 .output_mode = "comb_only";
defparam \out~38 .packed_mode = "false";
// synopsys translate_on

// atom is at LC2_D31
flex10ke_lcell \out~39 (
// Equation(s):
// \out~39_combout  = \in[3]~dataout  # !\in[0]~dataout  & !\in[1]~dataout 

	.dataa(vcc),
	.datab(\in[3]~dataout ),
	.datac(\in[0]~dataout ),
	.datad(\in[1]~dataout ),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\out~39_combout ),
	.regout(),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \out~39 .clock_enable_mode = "false";
defparam \out~39 .lut_mask = "cccf";
defparam \out~39 .operation_mode = "normal";
defparam \out~39 .output_mode = "comb_only";
defparam \out~39 .packed_mode = "false";
// synopsys translate_on

// atom is at PIN_56
flex10ke_io \in[2]~I (
	.datain(gnd),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(),
	.padio(in[2]));
// synopsys translate_off
defparam \in[2]~I .feedback_mode = "from_pin";
defparam \in[2]~I .operation_mode = "input";
defparam \in[2]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at PIN_21
flex10ke_io \out[0]~I (
	.datain(\out~38_combout ),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(),
	.padio(out[0]));
// synopsys translate_off
defparam \out[0]~I .feedback_mode = "none";
defparam \out[0]~I .operation_mode = "output";
defparam \out[0]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at PIN_20
flex10ke_io \out[1]~I (
	.datain(\out~39_combout ),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(),
	.padio(out[1]));
// synopsys translate_off
defparam \out[1]~I .feedback_mode = "none";
defparam \out[1]~I .operation_mode = "output";
defparam \out[1]~I .reg_source_mode = "none";
// synopsys translate_on

endmodule
